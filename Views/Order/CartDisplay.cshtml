@model IEnumerable<StoreFront2.ViewModels.CartViewModel>
@using StoreFront2.Data

@{
    var access = new UserPermission();
    var _usersetting = new UserSetting();
    var _storeFrontName = "Defaults";
    var _setting = new SystemSetting();
    var _site = new StoreFront2.Models.Site();
    if (Session["Site"] != null)
    {
        Layout = ((StoreFront2.Models.Site)Session["Site"]).LayoutPath;
        _storeFrontName = ((StoreFront2.Models.Site)Session["Site"]).StoreFrontName;
        _setting = ((StoreFront2.Models.Site)Session["Site"]).Setting;
        access = ((StoreFront2.Models.Site)Session["Site"]).SiteAuth;
        _usersetting = ((StoreFront2.Models.Site)Session["Site"]).SiteUserSetting;
        _site = (StoreFront2.Models.Site)Session["Site"];
    }

    var cartItemCount = 0;
    if (Session["CartItemCount"] != null)
    {
        cartItemCount = ((int)Session["CartItemCount"]);
    }
}
<style>
    .customer-photo {
        display: inline-block;
        width: 32px;
        height: 32px;
        border-radius: 50%;
        background-size: 32px 35px;
        background-position: center center;
        vertical-align: middle;
        line-height: 32px;
        box-shadow: inset 0 0 1px #999, inset 0 0 10px rgba(0,0,0,.2);
        margin-left: 5px;
    }

    .customer-name {
        display: inline-block;
        vertical-align: middle;
        line-height: 32px;
        padding-left: 3px;
    }
</style>
<div class="container">
    @{
        // Check for authorization

        <div class="row">
            <div class="col-xs-12">
                <div class="panel panel-info">
                    <div class="panel-heading">
                        <div class="panel-title">
                            <div class="row">
                                <div class="col-xs-9">
                                    <h5>
                                        <span id="spanCartCount" class="title_cart_pc count_cart" style="padding-left:.5em">@cartItemCount.ToString()</span>
                                        <br />
                                        <span class="glyphicon glyphicon-shopping-cart"></span> Shopping Cart
                                    </h5>
                                </div>
                                <div class="col-xs-3">
                                    <button type="button" class="btn btn-primary btn-sm btn-block">
                                        <span class="glyphicon glyphicon-shopping-cart"></span> @Html.ActionLink("Continue Shopping", "ProductList", "Order", new { @style = "color:white" })
                                    </button>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="panel-body">
                        @foreach (StoreFront2.ViewModels.CartViewModel objItems in Model)
                        {
                            if (@objItems.DisplayOrder == 0 || @objItems.DisplayOrder == 1)
                            {
                            <div id="lineitem" class="row">
                                <div class="col-md-2 col-sm-2 col-xs-4">
                                    <a class="thumbnail pull-left" href="@Url.Action("ProductDetail", "Order")/@objItems.ProductId">
                                        <img class="media-object" src="~/@Url.Content(@objItems.ImageRelativePath)" onerror="src='@Url.Content("~/Content/" + _storeFrontName + "/Images/default.png")'" style="width: 72px; height: 72px;">
                                    </a>
                                </div>
                                <div class="col-md-4 col-sm-4 col-xs-8">
                                    <h4><small><a href="@Url.Action("ProductDetail", "Order")/@objItems.ProductId">@objItems.ShortDesc</a></small></h4>
                                </div>
                                <div class="col-md-6 col-sm-6 col-xs-12">
                                    <div class="col-md-4 col-sm-4 col-xs-4 text-right">
                                        @{ if (_setting.DisplayProductPrices == 1)
                                            {
                                                if (_site.CurrencyFlag == 2)
                                                {
                                                    <h6><strong>@objItems.SellPriceCAD.ToString("c")<span class="text-muted"> x</span></strong></h6>
                                                }
                                                else
                                                {
                                                    <h6><strong>@objItems.SellPrice.ToString("c")<span class="text-muted"> x</span></strong></h6>
                                                }
                                            }
                                        }
                                    </div>
                                    <div class="input-group col-md-8 col-sm-8 col-xs-8">
                                        <input type="text" class="form-control input-sm" id="txtQty" value="@objItems.Count" style="width:50px;" readonly>
                                        <button id="btnEditSave" type="button" class="btn btn-link btn-sm" onclick="onChangeQty(@objItems.Id, @objItems.ProductId, this)">
                                            <span id="btnEditSaveIcon" class="glyphicon glyphicon-pencil" title="Update"></span>
                                        </button>
                                        <button id="btnCancel" type="button" class="btn btn-link btn-sm" onclick="onBtnCancel(@objItems.Id, @objItems.ProductId, this)" style="display:none">
                                            <span id="btnCancelIcon" class="glyphicon glyphicon-remove" title="Cancel"></span>
                                        </button>
                                        <button type="button" class="btn btn-link btn-sm" onclick="onDelete(@objItems.Id)">
                                            <span class="glyphicon glyphicon-trash" title="Remove"></span>
                                        </button>
                                    </div>
                                    <input type="hidden" id="hdnCartId" value="@objItems.CartId" />
                                </div>
                            </div>
                            <hr />
                            }
                        }
                    </div>
                    <div class="panel-footer">
                        <div class="row text-center">
                            <div class="col-xs-9">
                                <h4 class="text-right"></h4>
                            </div>
                            <div class="col-xs-3">
                                @{if (access.OrderCreate == 1)
                                    {
                                        if (((StoreFront2.Models.Site)Session["Site"]).IsPunchOutUser)
                                        {
                                            <button type="button" class="btn btn-success btn-sm btn-block" onclick="onSubmitPunchOut()">
                                                PunchOut Order <span class="glyphicon glyphicon-play"></span>
                                            </button>
                                        }
                                        else
                                        {
                                            <button type="button" class="btn btn-success btn-sm btn-block" onclick="onSubmit()">
                                                Checkout <span class="glyphicon glyphicon-play"></span>
                                            </button>
                                        }
                                    }
                                }
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>






        @*<div class="row" style="padding-top:20px">
                <div class="col-sm-12 col-md-10 col-md-offset-1">
                    <table class="table table-hover">
                        <thead>
                            <tr>
                                <th>Product</th>
                                <th>Quantity</th>
                                @{ if (_setting.DisplayProductPrices == 1)
                                    {
                                        <th class="text-center">Price</th>
                                    }
                                }
                                <th class="text-center">Total</th>
                                <th> </th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (StoreFront2.ViewModels.CartViewModel objItems in Model)
                            {
                                <tr>
                                    <td class="col-sm-8 col-md-6">
                                        <div class="media">
                                            <a class="thumbnail pull-left" href="@Url.Action("ProductDetail", "Order")/@objItems.ProductId">
                                                <img class="media-object" src="~/@Url.Content(@objItems.ImageRelativePath)" onerror="src='@Url.Content("~/Content/"+_storeFrontName+"/Images/default.png")'" style="width: 72px; height: 72px;">
                                            </a>
                                            <div class="media-body">
                                                <h4 class="media-heading"><a href="@Url.Action("ProductDetail", "Order")/@objItems.ProductId">@objItems.ShortDesc</a></h4>
                                                <span>Status: </span><span class="text-success"><strong>In Stock</strong></span>
                                            </div>
                                        </div>
                                    </td>
                                    <td class="col-sm-1 col-md-1" style="text-align: center">
                                        <input type="text" class="form-control" id="txtQty" value="@objItems.Count">
                                    </td>
                                    <td class="col-sm-1 col-md-1 text-center"><strong>0</strong></td>
                                    @{ if (_setting.DisplayProductPrices == 1)
                                        {
                                            <td class="col-sm-1 col-md-1 text-center"><strong>$0.00</strong></td>
                                        }
                                    }
                                    <td class="col-sm-1 col-md-1">
                                        <button type="button" id="btnUpdate" class="btn btn-success" onclick="onChangeQty(@objItems.Id, @objItems.ProductId, this)">
                                            <span class="glyphicon glyphicon-ok"></span> Update
                                        </button>
                                        <button type="button" id="btnRemove" class="btn btn-danger" onclick="onDelete(@objItems.Id)">
                                            <span class="glyphicon glyphicon-remove"></span> Remove
                                        </button>
                                    </td>
                                    <td>
                                        <input type="hidden" id="hdnCartId" value="@objItems.CartId" />
                                    </td>
                                </tr>
                            }
                            <tr>
                                <td>   </td>
                                <td>   </td>
                                <td>   </td>
                                <td>
                                    <button type="button" class="btn btn-default">
                                        <span class="glyphicon glyphicon-shopping-cart"></span> @Html.ActionLink("Continue Shopping", "ProductList", "Order")
                                    </button>
                                </td>
                                <td>
                                    @{if (access.OrderCreate == 1)
                                        {
                                            <button type="button" class="btn btn-success" onclick="onSubmit()">
                                                Checkout <span class="glyphicon glyphicon-play"></span>
                                            </button>
                                        }
                                    }
                                </td>
                            </tr>
                        </tbody>
                    </table>

                </div>
            </div>*@
    }
</div>
<script>
    function onSubmit() {
        var cartId = $("#hdnCartId").val();
        var nextPage = '@Url.Action("Cart_CheckoutProcess", "Order")/?cartId=' + cartId;
        window.location.href = nextPage;




        @*$.post("/Order/Cart_SubmitOrder", { CartId: cartId }, function (data) {
            alert("Order " + cartId + " has been submitted")

            window.location.href = '@Url.Action("ProductList", "Order")/'
        });*@
    }

    function onSubmitPunchOut() {
        var cartId = $("#hdnCartId").val();
        var cartNote = $("#cartnote").val();
        var methodId = $("#SelectedShipMethod").val();
        var userAddressId = $("#UserAddressId").val();
        var addressAlias = $("#AddressAlias").val();
        var company = $("#Company").val();
        var firstName = $("#FirstName").val();
        var lastName = $("#LastName").val();
        var address1 = $("#Address1").val();
        var address2 = $("#Address2").val();
        var city = $("#City").val();
        var state = $("#State").val();
        var zip = $("#Zip").val();
        var country = $("#Country").val();
        var phone = $("#Phone").val();
        var email = $("#Email").val();
        var setAsDefaultShipTo = false;

        $.post("/Order/Cart_SubmitPunchOutOrderAsync", {
            CartId: cartId,
            CartNote: cartNote,
            ShipMethodId: methodId,
            UserAddressId: userAddressId,
            AddressAlias: addressAlias,
            Company: company,
            FirstName: firstName,
            LastName: lastName,
            Address1: address1,
            Address2: address2,
            City: city,
            State: state,
            Zip: zip,
            Country: country,
            Phone: phone,
            Email: email,
            SetAsDefaultShipTo: setAsDefaultShipTo
        }, function (data) {
            if (data.result == "Error")
                alert(data.message + ". Please check your order.");
            else {
                alert(data.message);
                window.location.href = '@Url.Action("ProductList", "Order")/';
            }

        });
    }

    function onDelete(Id) {
        $.post("/Order/Cart_RemoveItem", { Id: Id }, function (data) {
            //alert("Item  has been removed");
            //var $row = $(this).parents("tr");
            //$row.remove();
            window.location.href = '@Url.Action("CartDisplay", "Order")/'
        });
    }


    var prevQty = 0;

    function onBtnCancel(Id, productId, obj) {
        var iconEdit = $(obj).closest('#lineitem').find("#btnEditSaveIcon");
        var btnCancel = $(obj).closest('#lineitem').find("#btnCancel");
        var txtQtyElement = $(obj).closest('#lineitem').find("#txtQty");

        iconEdit.removeClass("glyphicon-ok");
        iconEdit.addClass("glyphicon-pencil");

        txtQtyElement.val(prevQty);
        txtQtyElement.prop('readonly', true);
        btnCancel.css('display', 'none');
    }

    function onChangeQty(Id, productId, obj) {
        var iconEdit = $(obj).closest('#lineitem').find("#btnEditSaveIcon");
        var iconCancel = $(obj).closest('#lineitem').find("#btnCancelIcon");
        var btnEdit = $(obj).closest('#lineitem').find("#btnEditSave");
        var btnCancel = $(obj).closest('#lineitem').find("#btnCancel");
        var txtQtyElement = $(obj).closest('#lineitem').find("#txtQty");

        if (iconEdit.attr('class') == "glyphicon glyphicon-pencil") {
            iconEdit.removeClass("glyphicon-pencil");
            iconEdit.addClass("glyphicon-ok");

            $(obj).closest('#lineitem').find("#txtQty").prop('readonly', false);
            btnCancel.css('display', 'inline-block');
            prevQty = $(obj).closest('#lineitem').find('#txtQty').val();
        }
        else {
            var txtQty = $(obj).closest('#lineitem').find('#txtQty');
            var txtQtyValue = parseInt(txtQty.val());
            $.post("/Order/Cart_UpdateItem", { Id: Id, ProductId: productId, Count: txtQtyValue }, function (response) {
                if (response != null) {
                    if (response.result == "ErrorMax") {
                        var feedbackMessage = "The total qty for " + response.productcode + " exceeds the maximum qty allowed (" + response.maxqty + ") per order for this item. Please check your qty / cart and try again.";
                        //alert("Qty ordered for " + response.productcode + " more than maximum allowed (" + response.maxqty + ")")
                        alert(feedbackMessage);
                        $(txtQty).val(response.maxqty);
                    }
                    else if (response.result == "ErrorMin") {
                        var feedbackMessage = "The total qty for " + response.productcode + " less than minimum qty allowed (" + response.minqty + ") per order for this item. Please check your qty / cart and try again.";
                        //alert("Qty ordered for " + response.productcode + " less than minimum allowed (" + response.minqty + ")")
                        alert(feedbackMessage);
                        $(txtQty).val(response.minqty);
                    }
                    else if (response.result == "Error") {
                        alert(response.message);
                    }
                    else {
                        var feedbackMessage = "Cart Updated";
                        alert(feedbackMessage);

                        iconEdit.removeClass("glyphicon-ok");
                        iconEdit.addClass("glyphicon-pencil");
                        txtQtyElement.prop('readonly', true);

                        btnCancel.css('display', 'none');
                    }
                } else {
                    alert("Something went wrong");
                }
            });
        }
    }
    //})

</script>


