@model StoreFront2.ViewModels.OrderViewModel

<script>
    function qtyEditable() {
        return true;
    }
</script>

<div class="k-card k-card-body" style="width:auto">
    <div class="form-horizontal" style="padding:10px">

        <div class="form-group">

            @Html.HiddenFor(model => model.ProductIds)
            @Html.HiddenFor(model => model.ProductQtys)

            <div class="form-group">
                @Html.LabelFor(model => model.TrackingNumbers, htmlAttributes: new { @class = "control-label col-md-4" })
                <div class="col-md-8">
                    @Html.EditorFor(model => model.TrackingNumbers, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.TrackingNumbers, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.ShipMethodCode, htmlAttributes: new { @class = "control-label col-md-4" })
                <div class="col-md-8">
                    @(Html.Kendo().DropDownList()
                    .Name("ShipMethodCode")
                    .ValuePrimitive(true)
                    .DataValueField("Value")
                    .DataTextField("Text")
                    .BindTo(ViewBag.AllowedShipMethods)
                )
                </div>
            </div>

            @(Html.Kendo().Grid<StoreFront2.ViewModels.OrderDetailViewModel>()
                .Name("gridOrderDetail")
                .Columns(columns =>
                {
                    columns.Select().Width(50);
                    columns.Bound(c => c.ProductId).Hidden();
                    columns.Bound(c => c.ProductCode).Width(120);
                    columns.Bound(c => c.Qty).Width(75).Editable("qtyEditable").ClientTemplate("<input type='text' value='#=Qty#' onchange='ongridOrderDetailQtyChange(this)' style='width:75px'>");
                    //columns.Command(c => c.Edit().Text(" "));
                })
                .Editable(editable => editable.Mode(GridEditMode.InCell))
                .Pageable(p => p.ButtonCount(2))
                .DataSource(dataSource => dataSource
                    .Ajax()
                    .Model(c =>
                    {
                        c.Id(u => u.ProductId);
                        c.Field(f => f.Qty).Editable(true);
                        c.Field(f => f.ProductCode).Editable(false);
                    })
                    .Read(read => read.Action("Order_Details_Read_Vendor", "Order").Data("gridOrderDetail_orderInfo"))
                )
                .Events(ev =>
                {
                    ev.Change("ongridOrderDetailChange");
                })
                )
        </div>
    </div>
</div>

